def lfsr(key, poly, bin_arr):
    # This lfsr is generated by the size of the key, the polynomial, and the
    # number of list elements.
    shift_key, xor = key, 0
    lfsr_out = []

    for i in range(len(bin_arr)):
        # Uncomment the line below to reset the lfsr for each byte:
        # shift_key = key
        for j in range(8):  # j should always be in range of 8
            for i in poly:
                xor += int(shift_key[i - 1])
            if xor % 2 == 0:
                xor = 0
            else:
                xor = 1
            lfsr_out.append(xor)
            shift_key, xor = str(xor) + shift_key[:-1], 0  # Reset
            if shift_key == key:
                break

    return list(zip(*[iter(lfsr_out)] * 8))
